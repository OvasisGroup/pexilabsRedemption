# Generated by Django 4.2.23 on 2025-07-04 08:36

from decimal import Decimal
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentication', '0007_add_app_key_generation_module'),
    ]

    operations = [
        migrations.CreateModel(
            name='BankIntegration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('bank_name', models.CharField(max_length=100)),
                ('bank_code', models.CharField(max_length=20, unique=True)),
                ('country_code', models.CharField(help_text='ISO country code', max_length=2)),
                ('swift_code', models.CharField(blank=True, max_length=11)),
                ('supports_account_inquiry', models.BooleanField(default=False)),
                ('supports_balance_inquiry', models.BooleanField(default=False)),
                ('supports_transaction_history', models.BooleanField(default=False)),
                ('supports_fund_transfer', models.BooleanField(default=False)),
                ('supports_bill_payment', models.BooleanField(default=False)),
                ('supports_standing_orders', models.BooleanField(default=False)),
                ('supports_direct_debit', models.BooleanField(default=False)),
                ('min_transfer_amount', models.DecimalField(decimal_places=2, default=Decimal('1.00'), max_digits=15)),
                ('max_transfer_amount', models.DecimalField(decimal_places=2, default=Decimal('1000000.00'), max_digits=15)),
                ('daily_transfer_limit', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('transfer_fee_percentage', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), help_text='Transfer fee as percentage', max_digits=5)),
                ('transfer_fee_fixed', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Fixed transfer fee amount', max_digits=10)),
                ('inquiry_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Fee for account/balance inquiries', max_digits=10)),
                ('operating_hours_start', models.TimeField(blank=True, null=True)),
                ('operating_hours_end', models.TimeField(blank=True, null=True)),
                ('operates_weekends', models.BooleanField(default=False)),
                ('operates_holidays', models.BooleanField(default=False)),
                ('settlement_time', models.PositiveIntegerField(default=24, help_text='Settlement time in hours')),
            ],
            options={
                'verbose_name': 'Bank Integration',
                'verbose_name_plural': 'Bank Integrations',
                'ordering': ['bank_name'],
            },
        ),
        migrations.CreateModel(
            name='Integration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Integration name', max_length=100)),
                ('code', models.CharField(help_text='Unique integration code', max_length=50, unique=True)),
                ('description', models.TextField(blank=True, help_text='Integration description')),
                ('integration_type', models.CharField(choices=[('bank', 'Bank Integration'), ('payment_gateway', 'Payment Gateway'), ('sms', 'SMS Service'), ('email', 'Email Service'), ('kyc', 'KYC/Identity Verification'), ('accounting', 'Accounting Software'), ('crm', 'Customer Relationship Management'), ('analytics', 'Analytics Platform'), ('other', 'Other Integration')], default='other', max_length=20)),
                ('provider_name', models.CharField(help_text='Service provider name', max_length=100)),
                ('provider_website', models.URLField(blank=True, help_text='Provider website')),
                ('provider_documentation', models.URLField(blank=True, help_text='API documentation URL')),
                ('base_url', models.URLField(help_text='Base API URL')),
                ('is_sandbox', models.BooleanField(default=True, help_text='Whether this is a sandbox environment')),
                ('version', models.CharField(default='v1', help_text='API version', max_length=20)),
                ('authentication_type', models.CharField(choices=[('api_key', 'API Key'), ('bearer_token', 'Bearer Token'), ('oauth2', 'OAuth 2.0'), ('basic_auth', 'Basic Authentication'), ('jwt', 'JWT Token'), ('custom', 'Custom Authentication')], default='api_key', max_length=20)),
                ('supports_webhooks', models.BooleanField(default=False)),
                ('supports_bulk_operations', models.BooleanField(default=False)),
                ('supports_real_time', models.BooleanField(default=False)),
                ('rate_limit_per_minute', models.PositiveIntegerField(blank=True, help_text='API calls allowed per minute', null=True)),
                ('rate_limit_per_hour', models.PositiveIntegerField(blank=True, help_text='API calls allowed per hour', null=True)),
                ('rate_limit_per_day', models.PositiveIntegerField(blank=True, help_text='API calls allowed per day', null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('inactive', 'Inactive'), ('error', 'Error'), ('suspended', 'Suspended'), ('testing', 'Testing')], default='draft', max_length=20)),
                ('is_global', models.BooleanField(default=False, help_text='Whether this integration is available to all merchants')),
                ('last_health_check', models.DateTimeField(blank=True, null=True)),
                ('health_check_interval', models.PositiveIntegerField(default=300, help_text='Health check interval in seconds')),
                ('is_healthy', models.BooleanField(default=True)),
                ('health_error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Integration',
                'verbose_name_plural': 'Integrations',
                'ordering': ['provider_name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MerchantIntegration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_enabled', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('inactive', 'Inactive'), ('error', 'Error'), ('suspended', 'Suspended'), ('testing', 'Testing')], default='draft', max_length=20)),
                ('configuration', models.JSONField(default=dict, help_text='Merchant-specific configuration settings')),
                ('credentials', models.TextField(blank=True, help_text='Encrypted authentication credentials')),
                ('total_requests', models.PositiveIntegerField(default=0)),
                ('successful_requests', models.PositiveIntegerField(default=0)),
                ('failed_requests', models.PositiveIntegerField(default=0)),
                ('last_used_at', models.DateTimeField(blank=True, null=True)),
                ('consecutive_failures', models.PositiveIntegerField(default=0)),
                ('last_error_message', models.TextField(blank=True)),
                ('last_error_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='merchant_configurations', to='integrations.integration')),
                ('merchant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integrations', to='authentication.merchant')),
            ],
            options={
                'verbose_name': 'Merchant Integration',
                'verbose_name_plural': 'Merchant Integrations',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='IntegrationWebhook',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(help_text='Type of webhook event', max_length=50)),
                ('payload', models.JSONField(help_text='Webhook payload')),
                ('headers', models.JSONField(default=dict, help_text='Request headers')),
                ('is_processed', models.BooleanField(default=False)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('processing_error', models.TextField(blank=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_method', models.CharField(blank=True, help_text='Method used to verify webhook (signature, token, etc.)', max_length=50)),
                ('source_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='webhooks', to='integrations.integration')),
            ],
            options={
                'verbose_name': 'Integration Webhook',
                'verbose_name_plural': 'Integration Webhooks',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='IntegrationAPICall',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('method', models.CharField(help_text='HTTP method', max_length=10)),
                ('endpoint', models.CharField(help_text='API endpoint called', max_length=255)),
                ('request_headers', models.JSONField(blank=True, default=dict)),
                ('request_body', models.TextField(blank=True)),
                ('status_code', models.PositiveIntegerField(blank=True, null=True)),
                ('response_headers', models.JSONField(blank=True, default=dict)),
                ('response_body', models.TextField(blank=True)),
                ('response_time_ms', models.PositiveIntegerField(blank=True, null=True)),
                ('operation_type', models.CharField(help_text='Type of operation (transfer, inquiry, etc.)', max_length=50)),
                ('reference_id', models.CharField(blank=True, help_text='Reference ID for the operation', max_length=100)),
                ('is_successful', models.BooleanField(default=False)),
                ('error_message', models.TextField(blank=True)),
                ('error_code', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('merchant_integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_calls', to='integrations.merchantintegration')),
            ],
            options={
                'verbose_name': 'Integration API Call',
                'verbose_name_plural': 'Integration API Calls',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='integration',
            index=models.Index(fields=['code'], name='integration_code_7247ca_idx'),
        ),
        migrations.AddIndex(
            model_name='integration',
            index=models.Index(fields=['integration_type', 'status'], name='integration_integra_84ee68_idx'),
        ),
        migrations.AddIndex(
            model_name='integration',
            index=models.Index(fields=['status', 'is_global'], name='integration_status_b45b61_idx'),
        ),
        migrations.AddField(
            model_name='bankintegration',
            name='integration',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bank_details', to='integrations.integration'),
        ),
        migrations.AddField(
            model_name='bankintegration',
            name='settlement_currency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='settlement_for_banks', to='authentication.preferredcurrency'),
        ),
        migrations.AddField(
            model_name='bankintegration',
            name='supported_currencies',
            field=models.ManyToManyField(blank=True, related_name='supported_by_banks', to='authentication.preferredcurrency'),
        ),
        migrations.AddIndex(
            model_name='merchantintegration',
            index=models.Index(fields=['merchant', 'is_enabled'], name='integration_merchan_11954e_idx'),
        ),
        migrations.AddIndex(
            model_name='merchantintegration',
            index=models.Index(fields=['integration', 'status'], name='integration_integra_6e9364_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='merchantintegration',
            unique_together={('merchant', 'integration')},
        ),
        migrations.AddIndex(
            model_name='integrationwebhook',
            index=models.Index(fields=['integration', 'event_type'], name='integration_integra_d366aa_idx'),
        ),
        migrations.AddIndex(
            model_name='integrationwebhook',
            index=models.Index(fields=['is_processed', 'created_at'], name='integration_is_proc_859d10_idx'),
        ),
        migrations.AddIndex(
            model_name='integrationapicall',
            index=models.Index(fields=['merchant_integration', 'created_at'], name='integration_merchan_6e3eb9_idx'),
        ),
        migrations.AddIndex(
            model_name='integrationapicall',
            index=models.Index(fields=['operation_type', 'is_successful'], name='integration_operati_68b28d_idx'),
        ),
        migrations.AddIndex(
            model_name='integrationapicall',
            index=models.Index(fields=['reference_id'], name='integration_referen_dccfdd_idx'),
        ),
    ]
