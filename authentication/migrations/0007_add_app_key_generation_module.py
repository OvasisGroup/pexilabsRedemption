# Generated by Django 4.2.23 on 2025-07-04 05:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('authentication', '0006_populate_document_types'),
    ]

    operations = [
        migrations.CreateModel(
            name='WhitelabelPartner',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Partner company name', max_length=255)),
                ('code', models.CharField(help_text='Unique partner code (alphanumeric, no spaces)', max_length=50, unique=True)),
                ('contact_email', models.EmailField(help_text='Primary contact email', max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('website_url', models.URLField(blank=True, help_text='Partner website URL')),
                ('business_address', models.TextField(blank=True)),
                ('business_registration_number', models.CharField(blank=True, max_length=100)),
                ('tax_id', models.CharField(blank=True, max_length=50)),
                ('allowed_domains', models.TextField(blank=True, help_text='Comma-separated list of allowed domains for CORS (leave empty for no restrictions)')),
                ('webhook_url', models.URLField(blank=True, help_text='URL for receiving webhook notifications')),
                ('webhook_secret', models.CharField(blank=True, help_text='Secret key for webhook signature verification', max_length=255)),
                ('daily_api_limit', models.PositiveIntegerField(default=10000, help_text='Daily API request limit')),
                ('monthly_api_limit', models.PositiveIntegerField(default=300000, help_text='Monthly API request limit')),
                ('concurrent_connections_limit', models.PositiveIntegerField(default=100, help_text='Maximum concurrent connections allowed')),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_notes', models.TextField(blank=True)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_partners', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Whitelabel Partner',
                'verbose_name_plural': 'Whitelabel Partners',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AppKey',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Descriptive name for this API key', max_length=255)),
                ('key_type', models.CharField(choices=[('production', 'Production'), ('sandbox', 'Sandbox'), ('development', 'Development')], default='sandbox', max_length=20)),
                ('public_key', models.CharField(help_text='Public portion of the API key (visible to partner)', max_length=100, unique=True)),
                ('secret_key', models.CharField(help_text='Secret portion of the API key (hashed for security)', max_length=255)),
                ('key_prefix', models.CharField(default='pk_', help_text='Key prefix for identification', max_length=20)),
                ('scopes', models.TextField(default='read,write', help_text='Comma-separated list of API scopes (read, write, admin)')),
                ('allowed_ips', models.TextField(blank=True, help_text='Comma-separated list of allowed IP addresses (leave empty for no restrictions)')),
                ('daily_request_limit', models.PositiveIntegerField(blank=True, help_text='Daily request limit for this key (overrides partner limit if set)', null=True)),
                ('monthly_request_limit', models.PositiveIntegerField(blank=True, help_text='Monthly request limit for this key (overrides partner limit if set)', null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended'), ('revoked', 'Revoked')], default='active', max_length=20)),
                ('expires_at', models.DateTimeField(blank=True, help_text='When this API key expires (leave empty for no expiration)', null=True)),
                ('last_used_at', models.DateTimeField(blank=True, help_text='When this API key was last used', null=True)),
                ('total_requests', models.PositiveBigIntegerField(default=0, help_text='Total number of API requests made with this key')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('revoked_at', models.DateTimeField(blank=True, null=True)),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='app_keys', to='authentication.whitelabelpartner')),
                ('revoked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='revoked_app_keys', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'App Key',
                'verbose_name_plural': 'App Keys',
                'ordering': ['-created_at'],
                'unique_together': {('partner', 'name')},
            },
        ),
        migrations.CreateModel(
            name='AppKeyUsageLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('endpoint', models.CharField(help_text='API endpoint accessed', max_length=255)),
                ('method', models.CharField(help_text='HTTP method (GET, POST, etc.)', max_length=10)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('status_code', models.PositiveIntegerField()),
                ('response_time_ms', models.PositiveIntegerField(help_text='Response time in milliseconds')),
                ('request_size_bytes', models.PositiveIntegerField(default=0)),
                ('response_size_bytes', models.PositiveIntegerField(default=0)),
                ('request_id', models.CharField(blank=True, max_length=50)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('app_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_logs', to='authentication.appkey')),
            ],
            options={
                'verbose_name': 'App Key Usage Log',
                'verbose_name_plural': 'App Key Usage Logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['app_key', 'created_at'], name='authenticat_app_key_5d8469_idx'), models.Index(fields=['created_at'], name='authenticat_created_2b17df_idx'), models.Index(fields=['status_code'], name='authenticat_status__aba73d_idx')],
            },
        ),
    ]
